/*
   Examples:

   Example 1:
   Input: intervals = [[1,3],[6,9]], newInterval = [2,5] 
   Output: [[1,5],[6,9]] 
   Explanation: Intervals 1,3 and 2,5 can be merged to make 1,5. 
   
   Example 2:
   Input: intervals = [[1,2],[3,5],[6,7],[8,10],[12,16]], newInterval = [4,8] 
   Output: [[1,2],[3,10],[12,16]] 
   Explanation: Because the new interval [4,8] overlaps with [3,5],[6,7],[8,10].
*/


import java.util.ArrayList;
import java.util.Arrays;

public class Insert_Interval {
    public static int[][] insert(int[][] intervals, int[] newInterval) {
        ArrayList<int[]> res = new ArrayList<>();
        int i = 0;
        while(i < intervals.length){
            if(intervals[i][0] < newInterval[0]){
                res.add(intervals[i]);
                i++;
            } 
            else{
                break;
            }           
        }
        if(res.size() == 0 || res.get(res.size() - 1)[1] < newInterval[0]){
            res.add(newInterval);
        }
        else{
            int[] lastInterval = res.get(res.size() - 1);
            lastInterval[1] = Math.max(lastInterval[1], newInterval[1]);
        }
        while(i < intervals.length){
            int[] lastInterval = res.get(res.size() - 1);
            if(lastInterval[1] >= intervals[i][0]){
                // merging
                lastInterval[1] = Math.max(lastInterval[1], intervals[i][1]);
            }
            else{
                res.add(intervals[i]);                
            }    
            i++;        
        }
        return res.toArray(new int[res.size()][]);
    }
    public static void main(String[] args) {
        int[][]intervals = {{1,2},{3,5},{6,7},{8,10},{12,16}};
        int[] newInterval = {4,8};
        int[][] nums = insert(intervals, newInterval);
        for(int[] num : nums){
            System.out.println(Arrays.toString(num));
        }
    }
}
